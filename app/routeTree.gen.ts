/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as LoginImport } from './routes/login'
import { Route as DeferredImport } from './routes/deferred'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedUsersNewImport } from './routes/_authenticated/users.new'
import { Route as AuthenticatedUsersUserIdImport } from './routes/_authenticated/users.$userId'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DeferredRoute = DeferredImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsersNewRoute = AuthenticatedUsersNewImport.update({
  id: '/users/new',
  path: '/users/new',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsersUserIdRoute = AuthenticatedUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/$userId': {
      id: '/_authenticated/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthenticatedUsersUserIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users/new': {
      id: '/_authenticated/users/new'
      path: '/users/new'
      fullPath: '/users/new'
      preLoaderRoute: typeof AuthenticatedUsersNewImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedUsersUserIdRoute: typeof AuthenticatedUsersUserIdRoute
  AuthenticatedUsersNewRoute: typeof AuthenticatedUsersNewRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedUsersUserIdRoute: AuthenticatedUsersUserIdRoute,
  AuthenticatedUsersNewRoute: AuthenticatedUsersNewRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/sign-up': typeof SignUpRoute
  '/': typeof AuthenticatedIndexRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/users/new': typeof AuthenticatedUsersNewRoute
}

export interface FileRoutesByTo {
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/sign-up': typeof SignUpRoute
  '/': typeof AuthenticatedIndexRoute
  '/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/users/new': typeof AuthenticatedUsersNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/sign-up': typeof SignUpRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/users/$userId': typeof AuthenticatedUsersUserIdRoute
  '/_authenticated/users/new': typeof AuthenticatedUsersNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/deferred'
    | '/login'
    | '/sign-up'
    | '/'
    | '/users/$userId'
    | '/users/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/deferred'
    | '/login'
    | '/sign-up'
    | '/'
    | '/users/$userId'
    | '/users/new'
  id:
    | '__root__'
    | '/_authenticated'
    | '/deferred'
    | '/login'
    | '/sign-up'
    | '/_authenticated/'
    | '/_authenticated/users/$userId'
    | '/_authenticated/users/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  DeferredRoute: typeof DeferredRoute
  LoginRoute: typeof LoginRoute
  SignUpRoute: typeof SignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  DeferredRoute: DeferredRoute,
  LoginRoute: LoginRoute,
  SignUpRoute: SignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/deferred",
        "/login",
        "/sign-up"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/users/$userId",
        "/_authenticated/users/new"
      ]
    },
    "/deferred": {
      "filePath": "deferred.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/$userId": {
      "filePath": "_authenticated/users.$userId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/new": {
      "filePath": "_authenticated/users.new.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
